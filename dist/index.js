"use strict";var o=function(e,r){return function(){return r||e((r={exports:{}}).exports,r),r.exports}};var q=o(function(ve,F){F.exports={objectMode:!1,encoding:null,sep:"\n"}});var _=o(function(ge,w){"use strict";var N=require("@stdlib/assert-is-plain-object"),v=require("@stdlib/assert-has-own-property"),P=require("@stdlib/assert-is-boolean").isPrimitive,W=require("@stdlib/assert-is-nonnegative-number").isPrimitive,p=require("@stdlib/assert-is-string").isPrimitive,A=require("@stdlib/assert-is-function"),d=require("@stdlib/string-format");function R(e,r){return N(r)?v(r,"sep")&&(e.sep=r.sep,!p(e.sep))?new TypeError(d("invalid option. `%s` option must be a string. Option: `%s`.","sep",e.sep)):v(r,"objectMode")&&(e.objectMode=r.objectMode,!P(e.objectMode))?new TypeError(d("invalid option. `%s` option must be a boolean. Option: `%s`.","objectMode",e.objectMode)):v(r,"encoding")&&(e.encoding=r.encoding,!p(e.encoding)&&e.encoding!==null)?new TypeError(d("invalid option. `%s` option must be a string or null. Option: `%s`.","encoding",e.encoding)):v(r,"highWaterMark")&&(e.highWaterMark=r.highWaterMark,!W(e.highWaterMark))?new TypeError(d("invalid option. `%s` option must be a nonnegative number. Option: `%s`.","highWaterMark",e.highWaterMark)):v(r,"serialize")&&(e.serialize=r.serialize,!A(e.serialize))?new TypeError(d("invalid option. `%s` option must be a function. Option: `%s`.","serialize",e.serialize)):null:new TypeError(d("invalid argument. Options argument must be an object. Value: `%s`.",r))}w.exports=R});var M=o(function(ce,j){"use strict";var B=require("debug"),I=B("from-strided-array-stream");j.exports=I});var c=o(function(me,S){"use strict";var O=require("readable-stream").Readable,J=require("@stdlib/assert-is-collection"),C=require("@stdlib/assert-is-error"),L=require("@stdlib/assert-is-buffer"),D=require("@stdlib/assert-is-integer").isPrimitive,E=require("@stdlib/assert-is-nonnegative-integer").isPrimitive,G=require("@stdlib/object-assign"),U=require("@stdlib/utils-inherit"),f=require("@stdlib/utils-define-nonenumerable-property"),n=require("@stdlib/utils-define-nonenumerable-read-only-property"),b=require("@stdlib/buffer-from-string"),H=require("@stdlib/buffer-ctor"),g=require("@stdlib/string-format"),K=require("@stdlib/utils-next-tick"),Q=q(),X=_(),l=M();function Y(){var e,r,i;if(!this._destroyed)for(e=!0;e;){if(r=null,this._i+=1,this._i>this._N)return l("Finished iteration."),this.push(null);i=this._buffer[this._idx],l("Value: %s. Idx: %d. Iter: %d.",JSON.stringify(i),this._idx,this._i),this._idx+=this._stride,this._objectMode===!1&&(i=this._serialize(i),typeof i=="string"?this._i===1?i=b(i):i=b(this._sep+i):L(i)?this._i>1&&(i=H.concat([b(this._sep),i])):r=new Error(g("invalid operation. Serialization function must return a string or Buffer. Value: `%s`.",i))),r?this.emit("error",r):e=this.push(i)}}function Z(e){var r;if(this._destroyed)return l("Attempted to destroy an already destroyed stream."),this;return r=this,this._destroyed=!0,K(i),this;function i(){e&&(l("Stream was destroyed due to an error. Error: %s.",C(e)?e.message:JSON.stringify(e)),r.emit("error",e)),l("Closing the stream..."),r.emit("close")}}function u(e,r,i,a,s){var t,h,m;if(!(this instanceof u))return arguments.length>4?new u(e,r,i,a,s):new u(e,r,i,a);if(!E(e))throw new TypeError(g("invalid argument. First argument must be a nonnegative integer. Value: `%s`.",e));if(!J(r))throw new TypeError(g("invalid argument. Second argument must be an array-like object. Value: `%s`.",r));if(!D(i))throw new TypeError(g("invalid argument. Third argument must be an integer. Value: `%s`.",i));if(!E(a))throw new TypeError(g("invalid argument. Fourth argument must be a nonnegative integer. Value: `%s`.",a));if(e>0&&(m=a+(e-1)*i,a>=r.length||m<0||m>=r.length))throw new RangeError("invalid arguments. Strided array parameters are incompatible with the provided array-like object. Linear index exceeds array bounds.");if(t=G({},Q),arguments.length>4&&(h=X(t,s),h))throw h;return l("Creating a readable stream configured with the following options: %s.",JSON.stringify(t)),O.call(this,t),f(this,"_destroyed",!1),n(this,"_objectMode",t.objectMode),n(this,"_sep",t.sep),n(this,"_serialize",t.serialize||JSON.stringify),n(this,"_buffer",r),n(this,"_N",e),n(this,"_stride",i),n(this,"_offset",a),f(this,"_idx",a),f(this,"_i",0),this}U(u,O);n(u.prototype,"_read",Y);n(u.prototype,"destroy",Z);S.exports=u});var x=o(function(fe,T){"use strict";var $=require("@stdlib/assert-is-plain-object"),ee=require("@stdlib/string-format"),re=require("@stdlib/object-assign"),ie=c();function te(e,r,i,a,s){var t;if(arguments.length>4){if(t=s,!$(t))throw new TypeError(ee("invalid argument. Options argument must be an object. Value: `%s`.",t));t=re({},s)}else t={};return t.objectMode=!0,new ie(e,r,i,a,t)}T.exports=te});var k=o(function(be,z){"use strict";var ae=require("@stdlib/assert-is-plain-object"),ne=require("@stdlib/string-format"),se=require("@stdlib/object-assign"),ue=c();function oe(e){var r;if(arguments.length){if(!ae(e))throw new TypeError(ne("invalid argument. Options argument must be an object. Value: `%s`.",e));r=se({},e)}else r={};return i;function i(a,s,t,h){return new ue(a,s,t,h,r)}}z.exports=oe});var V=require("@stdlib/utils-define-nonenumerable-read-only-property"),y=c(),de=x(),le=k();V(y,"objectMode",de);V(y,"factory",le);module.exports=y;
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//# sourceMappingURL=index.js.map
